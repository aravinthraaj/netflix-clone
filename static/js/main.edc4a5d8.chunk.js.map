{"version":3,"sources":["Mockflix.png","pages/SearchPage/useCustomSearch.js","pages/SearchPage/SearchPage.jsx","Components/Nav/Nav.jsx","axios.js","Requests.js","Components/Banner/Banner.jsx","Components/Slide/Slide.jsx","Components/Row/Row.jsx","features/user/userSlice.js","Components/Footer/Footer.jsx","HomeScreen/HomeScreen.jsx","firebaseControl.js","HomeScreen/Login/SignInScreen/SignInScreen.jsx","HomeScreen/Login/Login.jsx","HomeScreen/Login/ProfileScreen/ProfileScreen.jsx","pages/TvShows/TvShows.jsx","pages/Movies/Movies.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["useCustomSearch","query","pageNumber","useState","Loading","setLoading","Error","setError","Items","setItems","hasMore","sethasMore","useEffect","cancel","axios","method","url","params","page","cancelToken","CancelToken","c","then","res","console","log","data","results","prevItems","array","map","item","Map","values","length","catch","e","isCancel","SearchPage","observer","useRef","useHistory","Query","setQuery","setpageNumber","URLSearchParams","useLocation","search","get","LastItemref","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevpageNumber","observe","style","color","index","className","ref","title","id","Nav","show","hanldeShow","isActive","setisActive","searchRef","history","ToggleActive","document","getElementById","focus","transitionNavbar","window","scrollY","addEventListener","onClick","push","src","logo","alt","type","placeholder","onChange","target","value","visibility","React","memo","instance","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixoriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","category","movie","setMovie","a","request","Math","floor","random","fetchData","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","name","original_name","overview","substr","Slide","poster","isHovered","setIsHovered","LightTooltip","withStyles","theme","tooltip","backgroundColor","palette","common","white","boxShadow","shadows","fontSize","fontWeight","padding","Tooltip","onMouseEnter","onMouseLeave","autoPlay","loop","placement","arrow","ThumbUpAltOutlined","ThumbDownOutlined","KeyboardArrowDown","Row","fetchUrl","isLargeRow","movies","setMovies","items","useMemo","filter","poster_path","postersRef","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","setCategory","actions","selectUser","selectCategory","Footer","HomeScreen","useSelector","process","firebaseConfig","apiKey","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","auth","firebase","initializeApp","firestore","GUEST_USER_NAME","GUEST_USER_PASSWORD","SignInScreen","emailRef","passwordRef","preventDefault","signInWithEmailAndPassword","authUser","error","alert","message","createUserWithEmailAndPassword","Login","signIn","setSignIn","ProfileScreen","email","signOut","TvShows","Movies","App","dispatch","useDispatch","onAuthStateChanged","userAuth","uid","exact","path","store","configureStore","reducer","userReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kcAAe,MAA0B,qC,8GCuD1BA,MApDf,SAAyBC,EAAMC,GAAa,IAAD,EAEXC,oBAAS,GAFE,mBAElCC,EAFkC,KAEzBC,EAFyB,OAGfF,oBAAS,GAHM,mBAGlCG,EAHkC,KAG3BC,EAH2B,OAIfJ,mBAAS,IAJM,mBAIlCK,EAJkC,KAI3BC,EAJ2B,OAKXN,oBAAS,GALE,mBAKlCO,EALkC,KAKzBC,EALyB,KAiDzC,OAxCAC,qBAAU,WACRH,EAAS,MACT,CAACR,IAGHW,qBAAU,WAIN,IAAIC,EAHN,GAAW,KAARZ,EA4BD,OA3BAI,GAAW,GACXE,GAAS,GAETO,IAAM,CACJC,OAAO,MACPC,IAAI,oGACJC,OAAQ,CAAEhB,MAAOA,EAAOiB,KAAMhB,GAC9BiB,YAAa,IAAIL,IAAMM,aAAY,SAAAC,GAAC,OAAIR,EAASQ,OAChDC,MAAK,SAAAC,GACNC,QAAQC,IAAIF,EAAIG,KAAKC,SAGrBlB,GAAS,SAAAmB,GACP,IAAMC,EAAK,sBAAOD,GAAP,YAAoBL,EAAIG,KAAKC,QAAQG,KAAI,SAAAC,GAAI,OAAIA,OAI5D,OAHgB,YAAO,IAAIC,IAAIH,EAAMC,KAAI,SAAAC,GAAI,MAAI,CAACA,EAAI,GAAQA,OAAQE,aAKxEtB,EAAWY,EAAIG,KAAKC,QAAQO,OAAS,GACrC7B,GAAW,MACV8B,OAAM,SAACC,GACLtB,IAAMuB,SAASD,IAClB7B,GAAS,MAIJ,kBAAMM,OAGf,CAACZ,EAAMC,IAGF,CAACE,UAASE,QAAOE,QAAOE,Y,gBCmBlB4B,MA7Df,WAEE,IAAMC,EAAWC,mBAFG,GAGJC,cACUtC,mBAAS,KAJf,mBAIbuC,EAJa,KAINC,EAJM,OAKgBxC,mBAAS,GALzB,mBAKbD,EALa,KAKD0C,EALC,KAQd3C,EAXC,IAAI4C,gBAAgBC,cAAcC,QAe3CnC,qBAAU,WAER+B,EAAS1C,EAAM+C,IAAI,MACnBJ,EAAc,KACb,CAAC3C,IAhBkB,MAwBlBD,EAAgB0C,EAAOxC,GALzBE,EAnBoB,EAmBpBA,QACAE,EApBoB,EAoBpBA,MACAE,EArBoB,EAqBpBA,MACAE,EAtBoB,EAsBpBA,QAGIuC,EAAcC,uBAAY,SAAAC,GAC3B/C,IACCmC,EAASa,SAASb,EAASa,QAAQC,aACvCd,EAASa,QAAU,IAAIE,sBAAqB,SAAAC,GACvCA,EAAQ,GAAGC,gBAAkB9C,GAC9BkC,GAAc,SAAAa,GAAc,OAAIA,EAAiB,QAGjDN,GAAMZ,EAASa,QAAQM,QAAQP,MACnC,CAAC/C,EAAQM,IAOT,OACE,sBAAKiD,MAAO,CAACC,MAAM,SAAnB,UACE,cAAC,EAAD,IACCpD,EAAMsB,KAAI,SAACC,EAAK8B,GACf,OAAGrD,EAAM0B,SAAW2B,EAAQ,EAElB,qBAAoBC,UAAU,OAAOC,IAAKd,EAA1C,SAAyDlB,EAAKiC,OAAnDjC,EAAKkC,IAGjB,qBAAmBH,UAAU,OAA7B,SAAsC/B,EAAKiC,OAAjCjC,EAAKkC,OAK1B,8BAAM7D,GAAW,eACjB,8BAAME,GAAS,cCxDrB,SAAS4D,IAAO,IAAD,EACe/D,oBAAS,GADxB,mBACJgE,EADI,KACCC,EADD,OAEqBjE,oBAAS,GAF9B,mBAEJkE,EAFI,KAEMC,EAFN,KAGLC,EAAY/B,iBAAO,MACnBgC,EAAU/B,cAYVgC,EAAe,WACnBH,GAAaD,GACbK,SAASC,eAAe,UAAUC,SAM9BC,EAAmB,WAClBC,OAAOC,QAAU,IAChBX,GAAW,GAEXA,GAAW,IAQnB,OAJAxD,qBAAU,WACNkE,OAAOE,iBAAiB,SAAUH,MAIlC,qBAAKf,UAAS,cAASK,GAAQ,cAA/B,SACI,sBAAKL,UAAU,YAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBACImB,QAAS,WAAKT,EAAQU,KAAK,MAE3BC,IAAKC,EAELC,IAAI,KAER,sBAAMpB,GAAG,OAAOgB,QAAS,WAAKT,EAAQU,KAAK,MAA3C,sBACA,sBAAMjB,GAAG,SAASgB,QAAS,WAAKT,EAAQU,KAAK,aAA7C,oBACA,sBAAMjB,GAAG,SAASgB,QAAW,WAAKT,EAAQU,KAAK,YAA/C,oBACA,mDACA,8CAEJ,sBAAKpB,UAAU,QAAf,UACK,sBAAKA,UAAU,SAAf,UACG,uBACIA,UAAS,gBAAWO,EAAW,SAAW,MAC1CiB,KAAK,OACLC,YAAY,yBACZC,SArDH,SAACpD,GACfA,EAAEqD,OAAOC,QACLtD,EAAEqD,OAAOC,MAAMxD,QAAU,EACxBsC,EAAQU,KAAR,KAEAV,EAAQU,KAAR,oBAA0B9C,EAAEqD,OAAOC,UAkDvBzB,GAAG,SACHF,IAAKQ,IAET,cAAC,IAAD,CAAYT,UAAU,cAAcmB,QAASR,IAC7C,cAAC,IAAD,CAAWX,UAAU,aAAaH,MAAOU,EAAW,CAACsB,WAAW,WAAa,CAACA,WAAW,UAAWV,QAASR,OAIjH,cAAC,IAAD,CAAeX,UAAU,SACzB,qBACImB,QAAS,WAAKT,EAAQU,KAAK,aAC3BC,IAAI,2GACJE,IAAI,KAER,sBAAKvB,UAAU,UAAf,UACI,cAAC,IAAD,CAAmBA,UAAU,SAC7B,sBAAKA,UAAU,UAAf,UACI,4CACA,wDASb8B,UAAMC,KAAK3B,G,uBC5FX4B,EAJEhF,IAAMiF,OAAO,CAC5BC,QAAS,iCCHLC,EAAU,mCAaDC,EAXE,CACfC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,sBAAsB,wBAAD,OAA0BH,EAA1B,sBACrBI,cAAc,4BAAD,OAA8BJ,EAA9B,mBACbK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,sBAClBS,mBAAmB,2BAAD,OAA6BT,EAA7B,oB,0DCgFLU,MAlFf,YAA6B,IAkBPC,EAAQC,EAlBbC,EAAW,EAAXA,SAAW,EACE3G,mBAAS,IADX,mBACjB4G,EADiB,KACVC,EADU,KAqBxB,OAjBApG,qBAAU,WAAM,4CACZ,4BAAAqG,EAAA,sEAC0BnG,EAAMkC,IAAIkD,EAASE,uBAD7C,cACUc,EADV,OAEIF,EACIE,EAAQxF,KAAKC,QACbwF,KAAKC,MAAMD,KAAKE,SAAWH,EAAQxF,KAAKC,QAAQO,OAAS,KAJjE,kBAOWgF,GAPX,4CADY,uBAAC,WAAD,wBAUZI,KACD,IAOC,qBAAKxD,UAAU,UAAf,SACA,yBAAQA,UAAU,SAASH,MAAO,CAC9B4D,eAAgB,QAChBC,gBAAgB,4CAAD,cAA8CT,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAOU,cAArD,MACfC,mBAAoB,iBAHxB,UAKKZ,GACL,sBAAKhD,UAAU,WAAf,UACE,+BAAoB,WAAbgD,EAAwB,SAAW,WAC1C,yBAAQa,KAAK,QAAQ1D,GAAG,QAAxB,UACE,2CACA,wBAAQyB,MAAM,YAAd,uBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,+BAIA,sBAAK5B,UAAU,mBAAf,UACI,oBAAIA,UAAU,QAAd,UACU,OAALiD,QAAK,IAALA,OAAA,EAAAA,EAAOY,QAAP,OAAeZ,QAAf,IAAeA,OAAf,EAAeA,EAAO/C,SAAtB,OAA+B+C,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOa,iBAE3C,oBAAI9D,UAAU,cAAd,UAnCM8C,EAmC+B,OAACG,QAAD,IAACA,OAAD,EAACA,EAAOc,SAnC/BhB,EAmCyC,KAlClD,OAAND,QAAM,IAANA,OAAA,EAAAA,EAAQ1E,QAAS2E,EAAID,EAAOkB,OAAO,EAAGjB,EAAI,GAAK,MAAQD,KAmCtD,sBAAK9C,UAAU,UAAf,UACI,wBAAQA,UAAU,cAAlB,SACI,sBAAKA,UAAU,WAAf,UACI,cAAC,IAAD,IACA,6CAIR,wBAAQA,UAAU,cAAlB,SACI,sBAAKA,UAAU,WAAf,UACI,cAAC,IAAD,IACA,wDAKhB,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CAAsBA,UAAU,SAChC,qBAAKA,UAAU,YAAf,SACI,4CAGR,qBAAKA,UAAU,qB,qFCAZiE,MAxEf,YAA0B,IAAVC,EAAS,EAATA,OAAS,EACW7H,oBAAS,GADpB,mBAChB8H,EADgB,KACLC,EADK,KAKjBC,EAAeC,aAAW,SAACC,GAAD,MAAY,CAC1CC,QAAS,CACPC,gBAAiBF,EAAMG,QAAQC,OAAOC,MACtC9E,MAAO,sBACP+E,UAAWN,EAAMO,QAAQ,GACzBC,SAAU,GACVC,WAAW,IACXC,QAAQ,WAPSX,CASjBY,KAGJ,OACE,qBAAKlF,UAAU,QACVmF,aAAc,kBAAMf,GAAa,IACjCgB,aAAc,kBAAMhB,GAAa,IAFtC,SAKE,qBAAKpE,UAAU,MAAf,SAEGmE,EACC,qCACE,uBAAOD,OAAQA,EAAQ7C,IAxBjC,wIAwB+CgE,UAAU,EAAMC,MAAI,IACzD,sBAAKtF,UAAU,UAAf,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAeA,UAAU,cACzB,cAACqE,EAAD,CAAcnE,MAAM,iBAAiBqF,UAAU,MAAMC,OAAK,EAA1D,SACE,cAAC,IAAD,CAAKxF,UAAU,WAEjB,cAACqE,EAAD,CAAcnE,MAAM,cAAcqF,UAAU,MAAMC,OAAK,EAAvD,SACE,cAACC,EAAA,EAAD,CAAoBzF,UAAU,WAEhC,cAACqE,EAAD,CAAcnE,MAAM,aAAaqF,UAAU,MAAMC,OAAK,EAAtD,SACE,cAACE,EAAA,EAAD,CAAmB1F,UAAU,cAGjC,qBAAKA,UAAU,QAAf,SACE,cAACqE,EAAD,CAAcnE,MAAM,YAAYqF,UAAU,MAAMC,OAAK,EAArD,SACE,cAACG,EAAA,EAAD,CAAmB3F,UAAU,gBAKnC,sBAAKA,UAAU,UAAf,UACE,2CACA,sBAAMA,UAAU,YAAhB,iBACA,0CACA,sBAAMA,UAAU,eAAhB,mBAEF,sBAAKA,UAAU,QAAf,UACE,0CACA,qBAAKA,UAAU,QACf,0CACA,qBAAKA,UAAU,QACf,+CAKN,qBAAKqB,IAAK6C,EAAQ3C,IAAI,U,OCrBfqE,MAhDf,YAAuD,IAAxC1F,EAAuC,EAAvCA,MAAO2F,EAAgC,EAAhCA,SAAgC,IAAtBC,kBAAsB,WACtBzJ,mBAAS,IADa,mBAC3C0J,EAD2C,KACnCC,EADmC,KAKlDlJ,qBAAU,WAAM,4CACZ,4BAAAqG,EAAA,sEAC0BnG,EAAMkC,IAAI2G,GADpC,cACUzC,EADV,OAEI4C,EAAU5C,EAAQxF,KAAKC,SAF3B,kBAGWuF,GAHX,4CADY,uBAAC,WAAD,wBAMZI,KACD,CAACqC,IAEJ,IAAMI,EAAQC,mBAAQ,WAClB,OAAOH,EACFI,QAAO,SAAAlI,GAAI,OAAK6H,GAAc7H,EAAKmI,cAAkBN,GAAc7H,EAAK0F,mBAC9E,CAACmC,EAAYC,IAEVM,EAAa3H,mBAKnB,OACI,sBAAKsB,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,6BAAKE,IACL,+CAGI,cAAC,IAAD,OAGR,qBAAKF,UAAU,UAAf,SACI,qBAAKA,UAAU,UAAUC,IAAKoG,EAA9B,SAGQJ,EAAMjI,KAAI,SAACiF,EAAOlD,GAAR,OAAkB,cAAC,EAAD,CAAmBmE,OAAM,UAnCxD,uCAmCwD,OAAgBjB,EAAMU,gBAAnC5D,c,gBC1CnDuG,EAAYC,YAAY,CACnC1C,KAAM,OACN2C,aAAa,CACXC,KAAK,KACLzD,SAAS,MAGX0D,SAAU,CAERC,MAAO,SAACC,EAAMC,GACZD,EAAMH,KAAOI,EAAOC,SAEtBC,OAAQ,SAACH,GACPA,EAAMH,KAAO,MAEfO,YAAa,SAACJ,EAAMC,GAClBD,EAAM5D,SAAW6D,EAAOC,Y,EAQcR,EAAUW,QAAvCN,G,EAAAA,MAAMI,G,EAAAA,OAERG,I,EAFeF,YAEF,SAACJ,GAAD,OAAWA,EAAMH,KAAKA,OAEnCU,GAAiB,SAACP,GAAD,OAAWA,EAAMH,KAAKzD,UAErCsD,KAAf,Q,mGCSec,OAnCf,WACE,OACE,sBAAKpH,UAAU,SAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,KAAD,CAAc+E,SAAS,QAAQ/E,UAAU,SACzC,cAAC,KAAD,CAAe+E,SAAS,QAAQ/E,UAAU,SAC1C,cAAC,KAAD,CAAa+E,SAAS,QAAQ/E,UAAU,SACxC,cAAC,KAAD,CAAa+E,SAAS,QAAQ/E,UAAU,YAE1C,sBAAKA,UAAU,QAAf,UACE,qDACA,oDACA,6CACA,4CACA,8CACA,oDACA,sCACA,8CACA,yCACA,+CACA,oDACA,uDACA,+CAEF,qBAAKA,UAAU,cAAf,0BAGA,qBAAKA,UAAU,aAAf,8CCQSqH,OAhCf,WACI,IAAMrE,EAAWsE,YAAYH,IAG7B,OACI,sBAAKnH,UAAU,aAAf,UAKI,cAAC,EAAD,CAAQgD,SAAUA,IAIlB,cAAC,EAAD,CACA9C,MAAM,oBACN2F,SAAUzD,EAASE,sBACnBwD,YAAU,IAEV,cAAC,EAAD,CAAK5F,MAAM,eAAe2F,SAAUzD,EAASC,gBAC7C,cAAC,EAAD,CAAKnC,MAAM,YAAY2F,SAAUzD,EAASG,gBAC1C,cAAC,EAAD,CAAKrC,MAAM,gBAAgB2F,SAAUzD,EAASI,oBAC9C,cAAC,EAAD,CAAKtC,MAAM,gBAAgB2F,SAAUzD,EAASK,oBAC9C,cAAC,EAAD,CAAKvC,MAAM,gBAAgB2F,SAAUzD,EAASM,oBAC9C,cAAC,EAAD,CAAKxC,MAAM,iBAAiB2F,SAAUzD,EAASO,qBAC/C,cAAC,EAAD,CAAKzC,MAAM,gBAAgB2F,SAAUzD,EAASQ,qBAE9C,cAAC,GAAD,Q,oCCxBR2E,6nBAEEC,GAAiB,CACrBC,O,GAVAC,2BAWAC,W,GAVAC,+BAWAC,Y,GAVAC,gCAWAC,U,GAVAC,8BAWAC,c,GAVAC,kCAWAC,kB,GAVAC,uCAWAC,M,GAVAC,2BAkBIC,IAFcC,KAASC,cAAcjB,IACpBkB,YACVF,KAASD,Q,WCtBlBhB,6nB,GAFFoB,gB,GACAC,oBA2EaC,OAxEf,WACE,IAAMC,EAAWpK,iBAAO,MAClBqK,EAAcrK,iBAAO,MAmD3B,OACE,qBAAKsB,UAAU,eAAf,SACE,iCACE,yCACA,uBAAOC,IAAK6I,EAAUtH,KAAK,QAAQC,YAAY,UAC/C,uBAAOxB,IAAK8I,EAAavH,KAAK,WAAWC,YAAY,aACrD,wBAAQN,QAxCC,SAAC7C,GACdA,EAAE0K,iBACFT,GAAKU,2BACHH,EAASxJ,QAAQsC,MACjBmH,EAAYzJ,QAAQsC,OAEnBpE,MAAK,SAAC0L,GACLxL,QAAQC,IAAIuL,MAEb7K,OAAM,SAAC8K,GACNC,MAAMD,EAAME,aA8Ba7H,KAAK,SAA9B,qBACA,wBAAQL,QAxBS,SAAC7C,GAEtBA,EAAE0K,iBACFT,GAAKU,2BACH,iBAAiB,UAEhBzL,MAAK,SAAC0L,GACLxL,QAAQC,IAAIuL,MAEb7K,OAAM,SAAC8K,GACNC,MAAMD,EAAME,aAcqB7H,KAAK,SAAtC,yBAEA,+BACE,sBAAMxB,UAAU,OAAhB,8BACA,sBAAMA,UAAU,OAAOmB,QA3Dd,SAAC7C,GAChBA,EAAE0K,iBACFT,GAAKe,+BACHR,EAASxJ,QAAQsC,MACjBmH,EAAYzJ,QAAQsC,OAEnBpE,MAAK,SAAC0L,GACLxL,QAAQC,IAAIuL,MAEb7K,OAAM,SAAC8K,GACNC,MAAMD,EAAME,aAiDV,mCC3BKE,OAzCf,WAAkB,IAAD,EACYlN,oBAAS,GADrB,mBACRmN,EADQ,KACDC,EADC,KAEf,OACE,sBAAKzJ,UAAU,QAAf,UAGE,qBAAKqB,IAAKC,EAAMC,IAAI,GAAGvB,UAAU,SACjC,wBAAQmB,QAAS,kBAAMsI,GAAU,IAAOzJ,UAAU,SAAlD,qBAIA,qBAAKA,UAAU,aAEf,qBAAKA,UAAU,OAAf,SAEGwJ,EAAU,cAAC,GAAD,IACT,qCACA,0EAGA,oEACA,uGACA,qBAAKxJ,UAAU,QAAf,SACE,uBAAM6G,OAAO,GAAb,UACE,uBAAOrF,KAAK,QAAQC,YAAY,kBAChC,wBAAQN,QAAS,kBAAMsI,GAAU,IAAOzJ,UAAU,aAAlD,8BAKJ,wBAAQmB,QAAS,kBAAMsI,GAAU,IAAOzJ,UAAU,wBAAlD,sD,OCIK0J,OA9Bf,WACE,IAAMjD,EAAOa,YAAYJ,IAEzB,OACE,sBAAKlH,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,OAAf,UACE,8CACA,sBAAKA,UAAU,OAAf,UACE,qBACEqB,IAAI,yEACJE,IAAI,WAEN,sBAAKvB,UAAU,UAAf,UACE,6BAAKyG,EAAKkD,QACV,qBAAK3J,UAAU,QAAf,SACE,wBACEmB,QAAS,kBAAIoH,GAAKqB,WAClB5J,UAAU,UAFZ,qC,SCUC6J,OA5Bf,WACE,OACE,sBAAK7J,UAAU,UAAf,UAKE,cAAC,EAAD,CAAQgD,SAAS,WAIjB,cAAC,EAAD,CACE9C,MAAM,oBACN2F,SAAUzD,EAASE,sBACnBwD,YAAU,IAEZ,cAAC,EAAD,CAAK5F,MAAM,eAAe2F,SAAUzD,EAASC,gBAC7C,cAAC,EAAD,CAAKnC,MAAM,YAAY2F,SAAUzD,EAASG,gBAC1C,cAAC,EAAD,CAAKrC,MAAM,gBAAgB2F,SAAUzD,EAASI,oBAC9C,cAAC,EAAD,CAAKtC,MAAM,gBAAgB2F,SAAUzD,EAASK,oBAC9C,cAAC,EAAD,CAAKvC,MAAM,gBAAgB2F,SAAUzD,EAASM,oBAC9C,cAAC,EAAD,CAAKxC,MAAM,iBAAiB2F,SAAUzD,EAASO,qBAC/C,cAAC,EAAD,CAAKzC,MAAM,gBAAgB2F,SAAUzD,EAASQ,qBAC9C,cAAC,GAAD,QCKSkH,OA5Bf,WACE,OACE,sBAAK9J,UAAU,SAAf,UAKE,cAAC,EAAD,CAAQgD,SAAS,WAIjB,cAAC,EAAD,CACE9C,MAAM,oBACN2F,SAAUzD,EAASE,sBACnBwD,YAAU,IAEZ,cAAC,EAAD,CAAK5F,MAAM,eAAe2F,SAAUzD,EAASC,gBAC7C,cAAC,EAAD,CAAKnC,MAAM,YAAY2F,SAAUzD,EAASG,gBAC1C,cAAC,EAAD,CAAKrC,MAAM,gBAAgB2F,SAAUzD,EAASI,oBAC9C,cAAC,EAAD,CAAKtC,MAAM,gBAAgB2F,SAAUzD,EAASK,oBAC9C,cAAC,EAAD,CAAKvC,MAAM,gBAAgB2F,SAAUzD,EAASM,oBAC9C,cAAC,EAAD,CAAKxC,MAAM,iBAAiB2F,SAAUzD,EAASO,qBAC/C,cAAC,EAAD,CAAKzC,MAAM,gBAAgB2F,SAAUzD,EAASQ,qBAC9C,cAAC,GAAD,QCyCSmH,OAtDf,WACE,IAAMtD,EAAOa,YAAYJ,IAKnB8C,EAAWC,cAiBjB,OAfAnN,qBAAU,WAYR,OAXoByL,GAAK2B,oBAAmB,SAACC,GAEzCH,EADCG,EACQxD,GAAM,CACbyD,IAAID,EAASC,IACbT,MAAMQ,EAASR,QAIR5C,WAIZ,CAACiD,IAGF,qBAAKhK,UAAU,MAAf,SAEE,cAAC,KAAD,UACIyG,EACE,qCACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,YAjBE,cAAC,GAAD,SC1CLC,GAAQC,YAAe,CAClCC,QAAS,CACPhE,KAAMiE,MCOUC,QACW,cAA7B3J,OAAO4J,SAASC,UAEe,UAA7B7J,OAAO4J,SAASC,UAEhB7J,OAAO4J,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJ3J,SAASC,eAAe,SDqHpB,kBAAmBqK,WACrBA,UAAUC,cAAcC,MAAM5N,MAAK,SAAC6N,GAClCA,EAAaC,kB","file":"static/js/main.edc4a5d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Mockflix.373a4e5a.png\";","import { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nfunction useCustomSearch(query,pageNumber) {\n\n  const [Loading, setLoading] = useState(true)\n  const [Error, setError] = useState(false)\n  const [Items, setItems] = useState([])\n  const [hasMore, sethasMore] = useState(false)\n\n\n\n  useEffect(()=>{\n    setItems([])\n  },[query])\n  \n\n  useEffect(()=>{\n    if(query!==''){\n      setLoading(true)\n      setError(false)\n      let cancel\n      axios({\n        method:'GET',\n        url:'https://api.themoviedb.org/3/search/movie?api_key=0811f7cab26d0c41f14c7646a7597b0d&language=en-US',\n        params: { query: query, page: pageNumber },\n        cancelToken: new axios.CancelToken(c => cancel = c)\n      }).then(res => {\n        console.log(res.data.results)\n        // const arrayUniqueByKey = [...new Map(array.map(item =>  [item[key], item])).values()];\n      \n        setItems(prevItems =>{\n          const array = [...prevItems,...res.data.results.map(item => item)]\n          const filterByID = [...new Map(array.map(item => [item['id'], item])).values()]\n          // const filterByName = [...new Map(filterByID.map(item => [item['original_title'], item])).values()]\n\n          return filterByID\n        })\n        sethasMore(res.data.results.length > 0)\n        setLoading(false)\n      }).catch((e) => {\n        if(axios.isCancel(e)) return\n        setError(true)\n      })\n  \n\n      return () => cancel()\n    }\n\n  },[query,pageNumber])\n\n\n  return {Loading, Error, Items, hasMore}\n}\n\nexport default useCustomSearch\n\n\n\n// import { useEffect, useState } from 'react'\n// import axios from 'axios'\n\n// function useCustomSearch(query,pageNumber) {\n\n//   const [Loading, setLoading] = useState(true)\n//   const [Error, setError] = useState(false)\n//   const [Items, setItems] = useState([])\n//   const [hasMore, sethasMore] = useState(false)\n\n//   useEffect(()=>{\n//     setItems([])\n//   },[query])\n  \n\n//   useEffect(()=>{\n//     if(query!==''){\n//       setLoading(true)\n//       setError(false)\n//       let cancel\n//       axios({\n//         method:'GET',\n//         url:'https://api.themoviedb.org/3/search/movie?api_key=0811f7cab26d0c41f14c7646a7597b0d&language=en-US',\n//         params: { query: query, page: pageNumber },\n//         cancelToken: new axios.CancelToken(c => cancel = c)\n//       }).then(res => {\n//         setItems(prevItems =>{\n//           return [...new Set([...prevItems, ...res.data.results.map(items => items)])]\n//         })\n//         sethasMore(res.data.results.length > 0)\n//         setLoading(false)\n//         console.log(res.data.results)\n//       }).catch((e) => {\n//         if(axios.isCancel(e)) return\n//         setError(true)\n//       })\n  \n\n//       return () => cancel()\n//     }\n\n//   },[query,pageNumber])\n\n\n//   return {Loading, Error, Items, hasMore}\n// }\n\n// export default useCustomSearch\n","import React,{useState,useRef,useCallback,useEffect} from 'react'\nimport { useParams,useLocation,useHistory } from 'react-router-dom' \nimport useCustomSearch from './useCustomSearch'\nimport Nav from '../../Components/Nav/Nav'\nimport './SearchPage.scss'\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction SearchPage() {\n\n  const observer = useRef()\n  const history = useHistory()\n  const [Query, setQuery] = useState('')\n  const [pageNumber, setpageNumber] = useState(1)\n  const base_url = \"https://image.tmdb.org/t/p/original\"\n\n  const query = useQuery();\n\n\n\nuseEffect(() => {\n\n  setQuery(query.get(\"q\"));\n  setpageNumber(1)\n}, [query])\n\nconst {\n  Loading,\n  Error,\n  Items,\n  hasMore\n  \n} = useCustomSearch(Query, pageNumber)\nconst LastItemref = useCallback(node=>{\n  if(Loading) return\n  if (observer.current) observer.current.disconnect()\n  observer.current = new IntersectionObserver(entries=>{\n    if(entries[0].isIntersecting && hasMore){\n      setpageNumber(prevpageNumber => prevpageNumber + 1)\n    }\n  })\n  if (node) observer.current.observe(node)\n},[Loading,hasMore])\n\n// console.log(Items)\n\n\n\n  \n  return (\n    <div style={{color:\"white\"}}>\n      <Nav/>\n      {Items.map((item,index) => {\n        if(Items.length === index + 1){\n\n          return  <div  key={item.id} className=\"item\" ref={LastItemref} >{item.title}</div>\n        }else{\n\n         return  <div key={item.id} className=\"item\" >{item.title}</div>\n        }\n      })}\n\n\n      <div>{Loading && \"Loading...\"}</div>\n      <div>{Error && \"Error\"}</div>\n    </div>\n  )\n}\n\nexport default SearchPage","import React,{useEffect,useState,useRef} from 'react'\nimport logo from '../../Mockflix.png'\nimport { useHistory } from 'react-router';\nimport './Nav.scss'\nimport SearchIcon from '@material-ui/icons/Search';\nimport Notifications from '@material-ui/icons/Notifications';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SearchPage from '../../pages/SearchPage/SearchPage';\n\nfunction Nav() {\n    const [show,hanldeShow] = useState(false);\n    const [isActive, setisActive] = useState(false)\n    const searchRef = useRef(null)\n    const history = useHistory();\n\n    const handleSearch = (e) =>{\n        if(e.target.value){\n            if(e.target.value.length <= 1){\n                history.push(`/`)\n            }else{\n                history.push(`/search?q=${e.target.value}`)\n            }\n        }\n    }\n\n    const ToggleActive = () => {\n      setisActive(!isActive);  \n      document.getElementById(\"search\").focus();\n\n    };\n\n\n\n    const transitionNavbar = () => {\n        if(window.scrollY > 100){\n            hanldeShow(true);\n        }else{\n            hanldeShow(false);\n        }\n    }\n\n    useEffect(()=>{\n        window.addEventListener(\"scroll\", transitionNavbar);\n    })\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n            <div className=\"container\">\n                <div className=\"left\">\n                    <img\n                        onClick={()=>{history.push(\"/\")}} \n                        // src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/2560px-Netflix_2015_logo.svg.png\" \n                        src={logo} \n\n                        alt=\"\"\n                    /> \n                    <span id=\"home\" onClick={()=>{history.push(\"/\")}} >Homepage</span>\n                    <span id=\"series\" onClick={()=>{history.push(\"/tvshows\")}} >Series</span>\n                    <span id=\"movies\" onClick = {()=>{history.push(\"/movies\")}}>Movies</span>\n                    <span>New and Popular</span>\n                    <span>My List</span>\n                </div>\n                <div className=\"right\">\n                     <div className=\"search\">\n                        <input \n                            className={`input ${isActive ? \"toggle\" : null}` } \n                            type=\"text\" \n                            placeholder=\"Titles, people, genres\"\n                            onChange={handleSearch}\n                            // onBlur = {ToggleActive}\n                            id=\"search\"\n                            ref={searchRef}\n                        />\n                        <SearchIcon className=\"search-icon\" onClick={ToggleActive} />\n                        <CloseIcon className=\"close-icon\" style={isActive ? {visibility:\"visible\"} : {visibility:\"hidden\"}} onClick={ToggleActive}/>\n                    </div>\n                    {/* <SearchIcon className=\"icon\"/> */}\n                    {/* <span>KID</span> */}\n                    <Notifications className=\"icon\"/>\n                    <img\n                        onClick={()=>{history.push(\"/profile\")}}\n                        src=\"https://images.pexels.com/photos/6899260/pexels-photo-6899260.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\n                        alt=\"\"\n                    />\n                    <div className=\"profile\">\n                        <ArrowDropDownIcon className=\"icon\"/>\n                        <div className=\"options\">\n                            <span>Settings</span>\n                            <span>Logout</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Nav)\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;\n","const API_KEY = \"0811f7cab26d0c41f14c7646a7597b0d\";\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixoriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;\n// https://api.themoviedb.org/3/trending/all/week?api_key=0811f7cab26d0c41f14c7646a7597b0d&language=en-US\n","import React, { useState, useEffect } from 'react'\nimport axios from '../../axios';\nimport requests from '../../Requests';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport VolumeUpOutlinedIcon from '@material-ui/icons/VolumeUpOutlined';\nimport './Banner.scss'\n\nfunction Banner({category}) {\n    const [movie, setMovie] = useState([]);\n    \n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixoriginals);\n            setMovie(\n                request.data.results[\n                Math.floor(Math.random() * request.data.results.length - 1)\n                ]\n            )\n            return request;\n        }\n        fetchData();\n    }, [])\n\n\n    function truncate(string, n) {\n        return string?.length > n ? string.substr(0, n - 1) + '...' : string;\n    }\n    return (\n        <div className=\"wrapper\">\n        <header className=\"banner\" style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n            backgroundPosition: \"center center\"\n        }}>\n            {category && (\n        <div className=\"category\">\n          <span>{category === \"movies\" ? \"Movies\" : \"Series\"}</span>\n          <select name=\"genre\" id=\"genre\">\n            <option>Genre</option>\n            <option value=\"adventure\">Adventure</option>\n            <option value=\"comedy\">Comedy</option>\n            <option value=\"crime\">Crime</option>\n            <option value=\"fantasy\">Fantasy</option>\n            <option value=\"historical\">Historical</option>\n            <option value=\"horror\">Horror</option>\n            <option value=\"romance\">Romance</option>\n            <option value=\"sci-fi\">Sci-fi</option>\n            <option value=\"thriller\">Thriller</option>\n            <option value=\"western\">Western</option>\n            <option value=\"animation\">Animation</option>\n            <option value=\"drama\">Drama</option>\n            <option value=\"documentary\">Documentary</option>\n          </select>\n        </div>\n      )}\n            <div className=\"detailsContainer\">\n                <h1 className=\"title\">\n                    {movie?.name || movie?.title || movie?.original_name}\n                </h1>\n                <h1 className=\"description\">{truncate(movie?.overview, 150)}</h1>\n                <div className=\"buttons\">\n                    <button className=\"button play\">\n                        <div className=\"btnAlign\">\n                            <PlayArrowIcon/>\n                            <span>Play</span>\n                            \n                        </div>\n                    </button>\n                    <button className=\"button more\">\n                        <div className=\"btnAlign\">\n                            <InfoOutlinedIcon/>\n                            <span>More Info</span>      \n                        </div>\n                    </button>\n                </div>\n            </div>\n            <div className=\"ratingContainer\">\n                <VolumeUpOutlinedIcon className=\"icon\"/>\n                <div className=\"ageRating\">\n                    <span>13+</span>\n                </div>\n            </div>\n            <div className=\"fadeBottom\"></div>\n        </header>\n        </div>\n    )\n}\n\nexport default Banner\n","import React,{useState} from 'react'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Add from '@material-ui/icons/Add';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { KeyboardArrowDown } from '@material-ui/icons';\n\n// import { PlayCircleOutline } from '@material-ui/icons';\nimport { ThumbDownOutlined, ThumbUpAltOutlined } from '@material-ui/icons';\n\nimport './Slide.scss'\n\nfunction Slide({poster}) {\n  const [isHovered, setIsHovered] = useState(false);\n  const trailer =\n  \"https://player.vimeo.com/external/371433846.sd.mp4?s=236da2f3c0fd273d2c6d9a064f3ae35579b2bbdf&profile_id=139&oauth2_token_id=57447761\";\n\n  const LightTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: 'rgba(0, 0, 0, 0.87)',\n      boxShadow: theme.shadows[1],\n      fontSize: 20,\n      fontWeight:700,\n      padding:\"10px\",\n    },\n  }))(Tooltip);\n \n\n  return (\n    <div className=\"slide\" \n         onMouseEnter={() => setIsHovered(true)}\n         onMouseLeave={() => setIsHovered(false)}\n    >\n\n      <div className=\"box\">\n        \n        {isHovered ? (\n          <>\n            <video poster={poster} src={trailer} autoPlay={true} loop />\n            <div className=\"buttons\">\n              <div className=\"left\">\n                <PlayArrowIcon className=\"icon play\"/>\n                <LightTooltip title=\"Add to My List\" placement=\"top\" arrow>\n                  <Add className=\"icon\"/>\n                </LightTooltip>\n                <LightTooltip title=\"I Like this\" placement=\"top\" arrow>\n                  <ThumbUpAltOutlined className=\"icon\"/>\n                </LightTooltip>\n                <LightTooltip title=\"Not for me\" placement=\"top\" arrow>\n                  <ThumbDownOutlined className=\"icon\"/>\n                </LightTooltip>\n              </div>\n              <div className=\"right\">\n                <LightTooltip title=\"More info\" placement=\"top\" arrow>\n                  <KeyboardArrowDown className=\"icon\"/>\n                </LightTooltip>\n              </div>\n            </div>\n\n            <div className=\"details\">\n              <h5>97% match</h5>\n              <span className=\"ageRating\">13+</span>\n              <h6>1h 20min</h6>\n              <span className=\"videoQuality\">HD</span>\n            </div>\n            <div className=\"genre\">\n              <span>Action</span>\n              <div className=\"dot\"/>\n              <span>Comedy</span>\n              <div className=\"dot\"/>\n              <span>Drama</span>\n            </div>\n          \n          </>\n        ) :\n        <img src={poster} alt=\"\" /> }\n        \n      </div>\n    </div>\n    \n  )\n}\n\nexport default Slide\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport axios from \"../../axios\";\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport Slide from '../Slide';\nimport \"./Row.scss\"\n\n\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\n    const [movies, setMovies] = useState([]);\n\n    const base_url = \"https://image.tmdb.org/t/p/original\"\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl])\n\n    const items = useMemo(() => {\n        return movies\n            .filter(item => (isLargeRow && item.poster_path) || (!isLargeRow && item.backdrop_path))\n    }, [isLargeRow, movies])\n\n    const postersRef = useRef()\n\n   \n\n\n    return (\n        <div className=\"row\">\n            <div className=\"title\">\n                <h1>{title}</h1>\n                <span>\n                    Explore All\n                </span>\n                    <KeyboardArrowRightIcon/>\n                \n            </div>\n            <div className=\"control\">\n                <div className=\"posters\" ref={postersRef}>\n\n                    {\n                        items.map((movie, index) => <Slide key={index} poster={`${base_url}${movie.backdrop_path}`}/>)\n                    }\n\n            </div>\n           </div>\n            \n        </div>\n    )\n}\n\nexport default Row\n\n\n\n\n\n\n\n\n// const moveRight = ()=>{\n//     const postersContainer = postersRef.current\n//     console.log(postersContainer)\n\n//     const maxScrollWidth = postersContainer.clientWidth\n//     const currentScroll = postersContainer.scrollLeft\n//     const postersElements = postersContainer.querySelectorAll('.slide')\n//     console.log(postersElements)\n\n\n//     // collect all children with their positions\n//     const allItems = Array.from(postersElements).reduce((carry, item, index) => {\n        \n//         if (index - 1 <= 0) {\n//             carry.push([\n//                 0, \n//                 item,\n//                 0,\n//             ])\n//         } else {\n//             const prevIndex = Math.max(0, index - 1)\n//             const style = item.currentStyle || window.getComputedStyle(item)\n\n//             // compute total width of element\n//             const width = parseFloat(style.marginLeft) + parseFloat(style.marginRight)\n//             + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth)\n//             + item.offsetWidth\n\n//             carry.push([\n//                 carry[prevIndex][0] + width, \n//                 item,\n//                 index,\n//             ])\n//         }\n//         // console.log(carry)\n//         return carry\n//     }, [])\n\n//     // console.log(allItems)\n\n\n//     // find visible items\n//     const visible = allItems.filter(([position, item]) => {\n//         const range = [position, position + item.clientWidth]\n//         const chunk = [currentScroll, currentScroll + maxScrollWidth]\n\n//         return range[0] >= chunk[0] && range[1] <= chunk[1]\n//     })\n\n//     // console.log(visible)\n\n\n//     // scroll to the last visible item\n//     if (visible.length) {\n//         const lastVisible = visible[visible.length - 1]\n//         let lastVisibleIndex = lastVisible[2]\n//         if (lastVisibleIndex + 1 >= allItems.length - 1) {\n//             lastVisibleIndex = -1\n//         }\n        \n//         postersContainer.scrollTo({\n//             left: allItems[lastVisibleIndex + 1][0],\n//             behavior: 'smooth'\n//         })\n//     }\n// }\n\n// const moveLeft = ()=>{\n//     const postersContainer = postersRef.current\n//     const maxScrollWidth = postersContainer.clientWidth\n//     const currentScroll = postersContainer.scrollLeft\n//     const postersElements = postersContainer.querySelectorAll('.slide')\n//     // console.log(postersElements)\n\n//     // collect all children with their positions\n//     const allItems = Array.from(postersElements).reduce((carry, item, index) => {\n        \n//         if (index - 1 <= 0) {\n//             carry.push([\n//                 0, \n//                 item,\n//                 0,\n//             ])\n//         } else {\n//             const prevIndex = Math.max(0, index - 1)\n//             const style = item.currentStyle || window.getComputedStyle(item)\n\n//             // compute total width of element\n//             const width = parseFloat(style.marginLeft) + parseFloat(style.marginRight)\n//             + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth)\n//             + item.offsetWidth\n\n//             carry.push([\n//                 carry[prevIndex][0] + width, \n//                 item,\n//                 index,\n//             ])\n//         }\n//         return carry\n//     }, [])\n\n//     // console.log(allItems)\n\n\n//     // find visible items\n//     const visible = allItems.filter(([position, item]) => {\n//         const range = [position, position + item.clientWidth]\n//         const chunk = [currentScroll, currentScroll + maxScrollWidth]\n\n//         return range[0] >= chunk[0] && range[1] <= chunk[1]\n//     })\n\n//     // console.log(visible)\n\n\n//     // scroll to the last visible item\n//     if (visible.length) {\n//         const lastVisible = visible[visible.length - 1]\n//         let lastVisibleIndex = lastVisible[2]\n//         if (lastVisibleIndex + 1 >= allItems.length - 1) {\n//             lastVisibleIndex = -1\n//         }\n//         // console.log(allItems[lastVisibleIndex + 1][0])\n//         postersContainer.scrollTo({\n//             left: -allItems[lastVisibleIndex + 1][0],\n//             behavior: 'smooth'\n//         })\n//     }\n// }\n","import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState:{\n    user:null,\n    category:null\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n\n    login: (state,action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n    setCategory: (state,action) => {\n      state.category = action.payload;\n    }\n  },\n\n\n});\n\n\nexport const { login,logout,setCategory } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport const selectCategory = (state) => state.user.category;\n\nexport default userSlice.reducer;\n","import React from 'react'\nimport './Footer.scss'\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"socialmedias\">\n        <FacebookIcon fontSize=\"large\" className=\"icon\"/>\n        <InstagramIcon fontSize=\"large\" className=\"icon\"/>\n        <TwitterIcon fontSize=\"large\" className=\"icon\"/>\n        <YouTubeIcon fontSize=\"large\" className=\"icon\"/>\n      </div>\n      <div className=\"links\">\n        <h5>Audio and Subtitles</h5>\n        <h5>Audio Descriptions</h5>\n        <h5>Help Center</h5>\n        <h5>Gift Cards</h5>\n        <h5>Media Center</h5>\n        <h5>Invester Relations</h5>\n        <h5>Jobs</h5>\n        <h5>Terms of Use</h5>\n        <h5>Privacy</h5>\n        <h5>Legal Notices</h5>\n        <h5>Cookie Preferences</h5>\n        <h5>Corporate Information</h5>\n        <h5>Contact Us</h5>\n      </div>\n      <div className=\"serviceCode\">\n        Service code\n      </div>\n      <div className=\"copyrights\">\n      &#169; Netflix copyrights. inc\n      </div>\n\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react';\nimport Nav from '../Components/Nav';\nimport Banner from '../Components/Banner'\nimport Row from '../Components/Row';\nimport { useSelector } from \"react-redux\";\nimport { selectCategory } from '../features/user/userSlice';\nimport './HomeScreen.scss'\nimport requests from '../Requests';\nimport Footer from '../Components/Footer/Footer';\n\nfunction HomeScreen() {\n    const category = useSelector(selectCategory);\n    \n\n    return (\n        <div className=\"homeScreen\">\n            {/* Nav */}\n            {/* <Nav/> */}\n            {/* <Featured/> */}\n            {/* Banner */}\n            <Banner category={category}/>\n\n            {/* Row */}\n            \n            <Row\n            title=\"Netflix Originals\"\n            fetchUrl={requests.fetchNetflixoriginals}\n            isLargeRow\n            />\n            <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n            <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n            <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n            <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n            <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n            <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n            <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n\n            <Footer/>\n        </div>\n    )\n}\n\nexport default HomeScreen\n","// import { initializeApp } from 'firebase/app';\n// import {auth} from 'firebase/auth';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nconst { \n  REACT_APP_FIREBASE_API_KEY, \n  REACT_APP_FIREBASE_AUTH_DOMAIN, \n  REACT_APP_FIREBASE_DATABASE_URL,\n  REACT_APP_FIREBASE_PROJECT_ID, \n  REACT_APP_FIREBASE_STORAGE_BUCKET, \n  REACT_APP_FIREBASE_MESSAGING_SENDER_ID, \n  REACT_APP_FIREBASE_APP_ID\n} = process.env;\n\nconst firebaseConfig = {\n  apiKey: REACT_APP_FIREBASE_API_KEY,\n  authDomain: REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FIREBASE_APP_ID\n};\n\n\n\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport {auth};\nexport default db;","import React,{useRef} from 'react'\nimport { auth } from '../../../firebaseControl';\n// import { getAuth, signInAnonymously } from \"firebase/auth\";\nimport './SignInScreen.scss'\n// import './styles.css'\nconst { \n  GUEST_USER_NAME,\n  GUEST_USER_PASSWORD\n} = process.env;\n\nfunction SignInScreen() {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  \n  const register = (e) => {\n    e.preventDefault();\n    auth.createUserWithEmailAndPassword(\n      emailRef.current.value, \n      passwordRef.current.value\n      )\n      .then((authUser) => {\n        console.log(authUser);\n      })\n      .catch((error) => {\n        alert(error.message);\n      })\n  }\n  \n  const signIn = (e) => {\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(\n      emailRef.current.value, \n      passwordRef.current.value\n      )\n      .then((authUser) => {\n        console.log(authUser);\n      })\n      .catch((error) => {\n        alert(error.message);\n      })\n  }\n\n\n\n\n  const anonymousLogin = (e) =>{\n\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(\n      \"test@gmail.com\",\"123456\"\n      )\n      .then((authUser) => {\n        console.log(authUser);\n      })\n      .catch((error) => {\n        alert(error.message);\n      })\n  }\n\n \n\n\n  return (\n    <div className=\"signInScreen\">\n      <form>\n        <h1>Sign In</h1>\n        <input ref={emailRef} type=\"email\" placeholder=\"Email\" />\n        <input ref={passwordRef} type=\"password\" placeholder=\"Password\" />\n        <button onClick={signIn} type=\"submit\">Sign In</button>\n        <button onClick={anonymousLogin} type=\"submit\">Guest Login</button>\n\n        <h4>\n          <span className=\"gray\">New to Netflix? </span>\n          <span className=\"link\" onClick={register}>Sign Up now.</span>\n        </h4>\n\n      </form>\n    </div>\n  )\n}\n\nexport default SignInScreen\n","import React,{useState} from 'react'\nimport './Login.scss'\nimport logo from '../../Mockflix.png'\n\nimport SignInScreen from './SignInScreen'\n\nfunction Login() {\n  const [signIn,setSignIn] = useState(false)\n  return (\n    <div className=\"login\">\n      \n      \n      <img src={logo} alt=\"\" className=\"logo\" />\n      <button onClick={() => setSignIn(true)} className=\"button\">\n        Sign In\n      </button>\n\n      <div className=\"gradient\"/>\n      \n      <div className=\"body\">\n\n        {signIn ? (<SignInScreen/>) : (\n          <>\n          <h1>\n            Unlimited films, TV programmes and more.\n          </h1>\n          <h2>Watch anywhere. Cancel at anytime </h2>\n          <h3>Ready to start enter your email to create or restart your membership.</h3>\n          <div className=\"input\">\n            <form action=\"\">\n              <input type=\"email\" placeholder=\"Email Address\" />\n              <button onClick={() => setSignIn(true)} className=\"getstarted\">\n                GET STARTED\n              </button>\n            </form>\n          </div>\n          <button onClick={() => setSignIn(true)} className=\"getstarted anonymosly\">\n              To check the website Anonymosly\n          </button>\n        </>\n        )}\n        \n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react';\n// import Nav from '../../../../HomeScreen/Nav';\nimport Nav from '../../../Components/Nav';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../features/user/userSlice';\nimport {auth} from '../../../firebaseControl'\n\nimport './ProfileScreen.scss'\n\n\nfunction ProfileScreen() {\n  const user = useSelector(selectUser);\n\n  return (\n    <div className=\"profileScreen\">\n      <Nav/>\n      <div className=\"body\">\n        <h1>Edit Profile</h1>\n        <div className=\"info\">\n          <img \n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" \n            alt=\"Avatar\" \n          />\n          <div className=\"details\">\n            <h2>{user.email}</h2>\n            <div className=\"plans\">\n              <button\n                onClick={()=>auth.signOut()} \n                className=\"signout\"\n              >\n                  Sign Out\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileScreen\n","import React from 'react'\nimport Nav from '../../Components/Nav'\nimport Banner from '../../Components/Banner'\nimport Row from '../../Components/Row'\nimport requests from '../../Requests'\nimport Footer from '../../Components/Footer/Footer'\n\n\nfunction TvShows() {\n  return (\n    <div className=\"tvshows\">\n      {/* Nav */}\n      {/* <Nav/> */}\n      {/* <Featured/> */}\n      {/* Banner */}\n      <Banner category=\"Series\"/>\n\n      {/* Row */}\n      \n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixoriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default TvShows\n","import React from 'react'\nimport Nav from '../../Components/Nav'\nimport Banner from '../../Components/Banner'\nimport Row from '../../Components/Row'\nimport requests from '../../Requests'\nimport Footer from '../../Components/Footer/Footer'\n\n\nfunction Movies() {\n  return (\n    <div className=\"movies\">\n      {/* Nav */}\n      {/* <Nav/> */}\n      {/* <Featured/> */}\n      {/* Banner */}\n      <Banner category=\"movies\"/>\n\n      {/* Row */}\n      \n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixoriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default Movies\n","import React,{useEffect} from \"react\";\nimport \"./App.scss\";\nimport HomeScreen from \"./HomeScreen\";\nimport Login from \"./HomeScreen/Login\";\nimport ProfileScreen from \"./HomeScreen/Login/ProfileScreen\";\nimport Nav from \"./Components/Nav\";\nimport { auth } from \"./firebaseControl\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./features/user/userSlice\"\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport TvShows from \"./pages/TvShows/TvShows\";\nimport Movies from \"./pages/Movies/Movies\";\nimport SearchPage from \"./pages/SearchPage/SearchPage\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  \n \n  // const user = null;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if(userAuth){\n        dispatch(login({\n          uid:userAuth.uid,\n          email:userAuth.email\n        }))\n\n      } else {\n        dispatch(logout())\n      }\n    });\n    return unsubscribe\n  }, [dispatch])\n\n  return (\n    <div className=\"app\">\n      {/* <HomeScreen /> */}\n      <Router>\n        {!user ? (<Login/>)\n          :(<>\n            <Nav/>\n            <Switch>\n              <Route exact path=\"/profile\">\n                <ProfileScreen/>\n              </Route>\n              <Route exact path=\"/\">\n                <HomeScreen />\n              </Route>\n              <Route exact path=\"/tvshows\">\n                <TvShows />\n              </Route>\n              <Route exact path=\"/movies\">\n                <Movies />\n              </Route>\n              <Route exact path=\"/search\">\n                <SearchPage/>\n              </Route>\n            </Switch> \n          </>)\n        }\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/user/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}