{"version":3,"sources":["Components/Nav/Nav.jsx","axios.js","Requests.js","Components/Banner/Banner.jsx","Components/Slide/Slide.jsx","Components/Row/Row.jsx","features/user/userSlice.js","HomeScreen/HomeScreen.jsx","firebaseControl.js","HomeScreen/Login/SignInScreen/SignInScreen.jsx","HomeScreen/Login/Login.jsx","HomeScreen/Login/ProfileScreen/ProfileScreen.jsx","pages/TvShows/TvShows.jsx","pages/Movies/Movies.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Nav","useState","show","hanldeShow","history","useHistory","transitionNavbar","window","scrollY","useEffect","addEventListener","className","onClick","push","src","alt","id","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixoriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","category","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","name","value","title","original_name","overview","substr","Slide","poster","LightTooltip","withStyles","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","fontWeight","padding","Tooltip","placement","arrow","ThumbUpAltOutlined","ThumbDownOutlined","KeyboardArrowDown","Row","fetchUrl","isLargeRow","movies","setMovies","map","poster_path","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","setCategory","actions","selectUser","selectCategory","HomeScreen","useSelector","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","SignInScreen","emailRef","useRef","passwordRef","ref","type","placeholder","e","preventDefault","signInWithEmailAndPassword","current","then","authUser","console","log","catch","error","alert","message","createUserWithEmailAndPassword","Login","signIn","setSignIn","ProfileScreen","email","signOut","TvShows","Movies","App","dispatch","useDispatch","onAuthStateChanged","userAuth","uid","path","exact","store","configureStore","reducer","userReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20df9513.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { useHistory } from 'react-router';\nimport './Nav.scss'\nimport SearchIcon from '@material-ui/icons/Search';\nimport Notifications from '@material-ui/icons/Notifications';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nfunction Nav() {\n    const [show,hanldeShow] = useState(false);\n    const history = useHistory();\n\n\n    const transitionNavbar = () => {\n        if(window.scrollY > 100){\n            hanldeShow(true);\n        }else{\n            hanldeShow(false);\n        }\n    }\n\n    useEffect(()=>{\n        window.addEventListener(\"scroll\", transitionNavbar);\n    })\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n            <div className=\"container\">\n                <div className=\"left\">\n                    <img\n                        onClick={()=>{history.push(\"/\")}} \n                        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/2560px-Netflix_2015_logo.svg.png\" \n                        alt=\"\"\n                    /> \n                    <span id=\"home\" onClick={()=>{history.push(\"/\")}} >Homepage</span>\n                    <span id=\"series\" onClick={()=>{history.push(\"/tvshows\")}} >Series</span>\n                    <span id=\"movies\" onClick = {()=>{history.push(\"/movies\")}}>Movies</span>\n                    <span>New and Popular</span>\n                    <span>My List</span>\n                </div>\n                <div className=\"right\">\n                    <SearchIcon className=\"icon\"/>\n                    <span>KID</span>\n                    <Notifications className=\"icon\"/>\n                    <img\n                        onClick={()=>{history.push(\"/profile\")}}\n                        src=\"https://images.pexels.com/photos/6899260/pexels-photo-6899260.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\n                        alt=\"\"\n                    />\n                    <div className=\"profile\">\n                        <ArrowDropDownIcon className=\"icon\"/>\n                        <div className=\"options\">\n                            <span>Settings</span>\n                            <span>Logout</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Nav\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;\n","const API_KEY = \"0811f7cab26d0c41f14c7646a7597b0d\";\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixoriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;\n// https://api.themoviedb.org/3/trending/all/week?api_key=0811f7cab26d0c41f14c7646a7597b0d&language=en-US\n","import React, { useState, useEffect } from 'react'\nimport axios from '../../axios';\nimport requests from '../../Requests';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport './Banner.scss'\n\nfunction Banner({category}) {\n    const [movie, setMovie] = useState([]);\n    \n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixoriginals);\n            setMovie(\n                request.data.results[\n                Math.floor(Math.random() * request.data.results.length - 1)\n                ]\n            )\n            return request;\n        }\n        fetchData();\n    }, [])\n\n\n    function truncate(string, n) {\n        return string?.length > n ? string.substr(0, n - 1) + '...' : string;\n    }\n    return (\n        <div className=\"wrapper\">\n        <header className=\"banner\" style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n            backgroundPosition: \"center center\"\n        }}>\n            {category && (\n        <div className=\"category\">\n          <span>{category === \"movies\" ? \"Movies\" : \"Series\"}</span>\n          <select name=\"genre\" id=\"genre\">\n            <option>Genre</option>\n            <option value=\"adventure\">Adventure</option>\n            <option value=\"comedy\">Comedy</option>\n            <option value=\"crime\">Crime</option>\n            <option value=\"fantasy\">Fantasy</option>\n            <option value=\"historical\">Historical</option>\n            <option value=\"horror\">Horror</option>\n            <option value=\"romance\">Romance</option>\n            <option value=\"sci-fi\">Sci-fi</option>\n            <option value=\"thriller\">Thriller</option>\n            <option value=\"western\">Western</option>\n            <option value=\"animation\">Animation</option>\n            <option value=\"drama\">Drama</option>\n            <option value=\"documentary\">Documentary</option>\n          </select>\n        </div>\n      )}\n            <div className=\"container\">\n                <h1 className=\"title\">\n                    {movie?.name || movie?.title || movie?.original_name}\n                </h1>\n                <h1 className=\"description\">{truncate(movie?.overview, 150)}</h1>\n                <div className=\"buttons\">\n                    <button className=\"button play\">\n                        <div className=\"btnAlign\">\n                            <PlayArrowIcon/>\n                            <span>Play</span>\n                            \n                        </div>\n                    </button>\n                    <button className=\"button more\">\n                        <div className=\"btnAlign\">\n                            <InfoOutlinedIcon/>\n                            <span>More Info</span>\n                            \n                        </div>\n                    </button>\n                </div>\n            </div>\n            <div className=\"fadeBottom\"></div>\n        </header>\n        </div>\n    )\n}\n\nexport default Banner\n","import React from 'react'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Add from '@material-ui/icons/Add';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { KeyboardArrowDown } from '@material-ui/icons';\n\n// import { PlayCircleOutline } from '@material-ui/icons';\nimport { ThumbDownOutlined, ThumbUpAltOutlined } from '@material-ui/icons';\n\nimport './Slide.scss'\n\nfunction Slide({poster}) {\n\n  const LightTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: 'rgba(0, 0, 0, 0.87)',\n      boxShadow: theme.shadows[1],\n      fontSize: 20,\n      fontWeight:700,\n      padding:\"10px\",\n    },\n  }))(Tooltip);\n \n\n  return (\n    <div className=\"slide\">\n\n      <div className=\"box\">\n        <img src={poster} alt=\"\" />\n\n        <div className=\"buttons\">\n          <div className=\"left\">\n            <PlayArrowIcon className=\"icon play\"/>\n            <LightTooltip title=\"Add to My List\" placement=\"top\" arrow>\n              <Add className=\"icon\"/>\n            </LightTooltip>\n            <LightTooltip title=\"I Like this\" placement=\"top\" arrow>\n              <ThumbUpAltOutlined className=\"icon\"/>\n            </LightTooltip>\n            <LightTooltip title=\"Not for me\" placement=\"top\" arrow>\n              <ThumbDownOutlined className=\"icon\"/>\n            </LightTooltip>\n          </div>\n          <div className=\"right\">\n            <LightTooltip title=\"More info\" placement=\"top\" arrow>\n              <KeyboardArrowDown className=\"icon\"/>\n            </LightTooltip>\n             \n            \n          </div>\n          \n        </div>\n        \n        <div className=\"details\">\n          <h5>97% match</h5>\n          <span className=\"ageRating\">13+</span>\n          <h6>1h 20min</h6>\n          <span className=\"videoQuality\">HD</span>\n        </div>\n        <div className=\"genre\">\n          <span>Action</span>\n          <div className=\"dot\"/>\n          <span>Comedy</span>\n          <div className=\"dot\"/>\n          <span>Drama</span>\n        </div>\n      </div>\n    </div>\n    \n  )\n}\n\nexport default Slide\n","import React, { useState, useEffect } from 'react';\nimport axios from \"../../axios\";\nimport Slide from '../Slide';\nimport \"./Row.scss\"\n\n\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\n    const [movies, setMovies] = useState([]);\n\n    const base_url = \"https://image.tmdb.org/t/p/original\"\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl])\n\n\n    return (\n        <div className=\"row\">\n            <h1>{title}</h1>\n            <div className=\"posters\">\n                {movies.map((movie) => \n                ((isLargeRow && movie.poster_path) || (!isLargeRow && movie.backdrop_path)) && (\n                    <Slide poster={`${base_url}${movie.backdrop_path}`}/>\n                    // <img className={`poster ${isLargeRow && \"posterLarge\"}`} \n                    //     src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\n                    //         }`}\n                    //     alt={movie.name} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Row\n","import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState:{\n    user:null,\n    category:null\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n\n    login: (state,action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n    setCategory: (state,action) => {\n      state.category = action.payload;\n    }\n  },\n\n\n});\n\n\nexport const { login,logout,setCategory } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport const selectCategory = (state) => state.user.category;\n\nexport default userSlice.reducer;\n","import React from 'react';\nimport Nav from '../Components/Nav';\nimport Banner from '../Components/Banner'\nimport Row from '../Components/Row';\nimport { useSelector } from \"react-redux\";\nimport { selectCategory } from '../features/user/userSlice';\nimport './HomeScreen.scss'\nimport requests from '../Requests';\n\nfunction HomeScreen() {\n    const category = useSelector(selectCategory);\n    \n\n    return (\n        <div className=\"homeScreen\">\n            {/* Nav */}\n            <Nav/>\n            {/* <Featured/> */}\n            {/* Banner */}\n            <Banner category={category}/>\n\n            {/* Row */}\n            \n            <Row\n            title=\"Netflix Originals\"\n            fetchUrl={requests.fetchNetflixoriginals}\n            isLargeRow\n            />\n            <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n            <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n            <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n            <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n            <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n            <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n            <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n\n\n        </div>\n    )\n}\n\nexport default HomeScreen\n","// import { initializeApp } from 'firebase/app';\n// import {auth} from 'firebase/auth';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBqehK2vWnkS9-v7Rh2bGGpu_Wgkr3YjI8\",\n  authDomain: \"netflix-clone-dd12c.firebaseapp.com\",\n  databaseURL: \"https://netflix-clone-dd12c-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"netflix-clone-dd12c\",\n  storageBucket: \"netflix-clone-dd12c.appspot.com\",\n  messagingSenderId: \"864634775014\",\n  appId: \"1:864634775014:web:6541040386fb489a3ae227\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport {auth};\nexport default db;","import React,{useRef} from 'react'\nimport { auth } from '../../../firebaseControl';\nimport './SignInScreen.scss'\n// import './styles.css'\n\nfunction SignInScreen() {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  \n  const register = (e) => {\n    e.preventDefault();\n    auth.createUserWithEmailAndPassword(\n      emailRef.current.value, \n      passwordRef.current.value\n      )\n      .then((authUser) => {\n        console.log(authUser);\n      })\n      .catch((error) => {\n        alert(error.message);\n      })\n  }\n  \n  const signIn = (e) => {\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(\n      emailRef.current.value, \n      passwordRef.current.value\n      )\n      .then((authUser) => {\n        console.log(authUser);\n      })\n      .catch((error) => {\n        alert(error.message);\n      })\n  }\n\n\n  return (\n    <div className=\"signInScreen\">\n      <form>\n        <h1>Sign In</h1>\n        <input ref={emailRef} type=\"email\" placeholder=\"Email\" />\n        <input ref={passwordRef} type=\"password\" placeholder=\"Password\" />\n        <button onClick={signIn} type=\"submit\">Sign In</button>\n        <h4>\n          <span className=\"gray\">New to Netflix? </span>\n          <span className=\"link\" onClick={register}>Sign Up now.</span>\n        </h4>\n\n      </form>\n    </div>\n  )\n}\n\nexport default SignInScreen\n","import React,{useState} from 'react'\nimport './Login.scss'\nimport SignInScreen from './SignInScreen'\n\nfunction Login() {\n  const [signIn,setSignIn] = useState(false)\n  return (\n    <div className=\"login\">\n      \n      <img src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"\" className=\"logo\" />\n      <button onClick={() => setSignIn(true)} className=\"button\">\n        Sign In\n      </button>\n      <div className=\"gradient\"/>\n      \n      <div className=\"body\">\n        {signIn ? (<SignInScreen/>) : (\n          <>\n          <h1>\n            Unlimited films, TV programmes and more.\n          </h1>\n          <h2>Watch anywhere. Cancel at anytime </h2>\n          <h3>Ready to start enter your email to create or restart your membership.</h3>\n          <div className=\"input\">\n            <form action=\"\">\n              <input type=\"email\" placeholder=\"Email Address\" />\n              <button onClick={() => setSignIn(true)} className=\"getstarted\">\n                GET STARTED\n              </button>\n            </form>\n          </div>\n        </>\n        )}\n        \n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react';\n// import Nav from '../../../../HomeScreen/Nav';\nimport Nav from '../../../Components/Nav';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../features/user/userSlice';\nimport {auth} from '../../../firebaseControl'\n\nimport './ProfileScreen.scss'\n\n\nfunction ProfileScreen() {\n  const user = useSelector(selectUser);\n\n  return (\n    <div className=\"profileScreen\">\n      <Nav/>\n      <div className=\"body\">\n        <h1>Edit Profile</h1>\n        <div className=\"info\">\n          <img \n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" \n            alt=\"Avatar\" \n          />\n          <div className=\"details\">\n            <h2>{user.email}</h2>\n            <div className=\"plans\">\n              <button\n                onClick={()=>auth.signOut()} \n                className=\"signout\"\n              >\n                  Sign Out\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileScreen\n","import React from 'react'\nimport Nav from '../../Components/Nav'\nimport Banner from '../../Components/Banner'\nimport Row from '../../Components/Row'\nimport requests from '../../Requests'\n\n\nfunction TvShows() {\n  return (\n    <div className=\"tvshows\">\n      {/* Nav */}\n      <Nav/>\n      {/* <Featured/> */}\n      {/* Banner */}\n      <Banner category=\"Series\"/>\n\n      {/* Row */}\n      \n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixoriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n\n    </div>\n  )\n}\n\nexport default TvShows\n","import React from 'react'\nimport Nav from '../../Components/Nav'\nimport Banner from '../../Components/Banner'\nimport Row from '../../Components/Row'\nimport requests from '../../Requests'\n\n\nfunction Movies() {\n  return (\n    <div className=\"movies\">\n      {/* Nav */}\n      <Nav/>\n      {/* <Featured/> */}\n      {/* Banner */}\n      <Banner category=\"movies\"/>\n\n      {/* Row */}\n      \n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixoriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n\n    </div>\n  )\n}\n\nexport default Movies\n","import React,{useEffect} from \"react\";\nimport \"./App.scss\";\nimport HomeScreen from \"./HomeScreen\";\nimport Login from \"./HomeScreen/Login\";\nimport ProfileScreen from \"./HomeScreen/Login/ProfileScreen\";\nimport { auth } from \"./firebaseControl\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./features/user/userSlice\"\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport TvShows from \"./pages/TvShows/TvShows\";\nimport Movies from \"./pages/Movies/Movies\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n \n  // const user = null;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if(userAuth){\n        dispatch(login({\n          uid:userAuth.uid,\n          email:userAuth.email\n        }))\n\n      } else {\n        dispatch(logout())\n      }\n    });\n    return unsubscribe\n  }, [dispatch])\n\n  return (\n    <div className=\"app\">\n      {/* <HomeScreen /> */}\n      <Router>\n        {!user ? (<Login/>)\n          :(<Switch>\n            <Route path=\"/profile\">\n              <ProfileScreen/>\n            </Route>\n            <Route exact path=\"/\">\n              <HomeScreen />\n            </Route>\n            <Route path=\"/tvshows\">\n              <TvShows />\n            </Route>\n            <Route path=\"/movies\">\n              <Movies />\n            </Route>\n          </Switch> )\n        }\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/user/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}